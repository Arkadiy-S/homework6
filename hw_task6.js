
// ДЗ  Задача 6. Правильная скобочная последовательность.
/* Ввести последовательность символов, состоящую из “(){}[]”. Проверить на правильность и вывести результат проверки true или false.

Input: {[]({})}

Output: true
*/
"use strict";
 
function bracketParse(s) {

let i;
let arr = s.split(""); //массив для хранения исходной строки
let stack = []; // стек для скобок
let output = true; // в программе будем искать неверные комбинации, если не обнаружены, то последовательность правильная 


arr.forEach(function(item, i, arr) { // перебираем  символы исходной строки из массива arr
  // модуль анализа поступающих символов исходной строки из массива arr  
  if ( item == "(" || item == "[" || item == "{" ) { //  если из arr "на вход" анализа  поступает  открывающая скобка - заносится в стек
      stack.push(item);
  }


// обработка для квадр. скобок 
  if ( item == "]" && stack[stack.length-1] == "[" ) { // удаляется из стека открывающая скобка, если на входе такая же закрывающая
      stack.pop(item); 
      return;
  } 
  if ( item == "]" && stack[stack.length-1] != "[" ) { //скобка не соответствует открывающей, хранящейся на выходе стека - неверная последовательность
      output = false; return; // для случая других символов кроме скобок во вх. последовательности
  } 

// обработка для круг. скобок 
  if ( item == ")" && stack[stack.length-1] == "(" ) { // удаляется из стека открывающая скобка, если на входе такая же закрывающая
       stack.pop(item);
       return;
  } 
  if ( item == ")" && stack[stack.length-1] != "(" ) { //скобка не соответствует открывающей, хранящейся на выходе стека - неверная последовательность
      output = false; return;
  }
  
// обработка для фиг. скобок 
  if ( item == "}" && stack[stack.length-1] == "{" ) { // удаляется из стека открывающая скобка, если на входе такая же закрывающая
      stack.pop(item);
      return;
  } 
  if ( item == "}" && stack[stack.length-1] != "{" ) { //скобка не соответствует открывающей, хранящейся на выходе стека - неверная последовательность
      output = false; return;
  }
  
});


if ( stack.length != 0 ) {output = false;} // последовательность символов закончилась , стек не опустел 
// - неверная последовательность 

return output; 
}

// Input: {[]({})}
let s = "{[]({})}";
console.log(bracketParse(s));